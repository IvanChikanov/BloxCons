import { HTMLFather as HTML } from "../system_js/HTMLFather.js";
class CellFather
{
    number;
    #grid;
    id;
    moduleLink;
    inside;
    tools;
    cellData;
    constructor(grid, data)
    {
        this.cellData = data;
        this.number = data.number;
        this.id = data.id;
        this.#grid = grid;
        this.createElement(data.moduleLink);
    }
    editGridArea()
    {
        return `${this.number}/1/${this.number}/1`;
    }
    createElement(mdl)
    {
        this.inside = HTML.createAndAppend("DIV", this.#grid.gridElem);
        if(mdl == null)
        {
            this.inside.style.gridArea = this.editGridArea();
            HTML.addStyles(["grid", "emptyCell", "zIndex50"], [this.inside]);
            let inside = HTML.createAndAppend("h1", this.inside);
            inside.innerText = "Не заполнен модуль";
            HTML.addStyles(["justifySelfCenter", "alignSelfCenter"], [inside]);
        }
        else
        {
            this.moduleLink = mdl;
            this.loadModule(mdl)
        }
    }
    async loadModule(moduleId)
    {
        let m = await import(`/js/get/${moduleId}`);
        let cls = new m.mdl();
        cls.setData(this.cellData);
        this.replaceElement(await cls.init(this.id));
    }
    replaceElement(newElem)
    {
        this.#grid.gridElem.replaceChild(newElem, this.inside);
        this.inside = newElem;
        this.inside.style.gridArea = this.editGridArea();
    }
    getGrid()
    {
        return this.#grid;
    }
}
export {CellFather};